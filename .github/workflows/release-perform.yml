name: SmallRye Release
run-name: Perform ${{github.event.inputs.tag || github.ref_name}} Release
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true

permissions:
  attestations: write
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  RELEASE_VERSION: ${{github.event.inputs.tag || github.ref_name}}

jobs:
  perform-release:
    name: Perform Release
    uses: smallrye/.github/.github/workflows/perform-release.yml@main
    secrets: inherit
    with:
      version: ${{env.RELEASE_VERSION}}

  publish-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        name: Create GitHub App Token
        with:
          app-id: ${{ vars.CI_APP_ID }}
          private-key: ${{ secrets.CI_APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          ref: ${{env.RELEASE_VERSION}}
          token: ${{steps.app-token.outputs.token}}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Configure Git author
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: docs release ${{env.RELEASE_VERSION}}
        run: |
          cd documentation
          mvn package
          pipx install pipenv
          pipenv install
          git fetch origin gh-pages --depth=1
          pipenv run mike deploy --config-file=mkdocs.yaml --push --update-aliases "${RELEASE_VERSION}" Latest

  publish-tck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{env.RELEASE_VERSION}}
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11
      - name: generate tck report
        run: |
          mvn surefire-report:report
          mv testsuite/tck/target/tck-results.html $GITHUB_WORKSPACE
      - uses: meeDamian/github-release@2.0
        name: upload tck asset to release
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          tag: ${{env.RELEASE_VERSION}}
          allow_override: true
          gzip: false
          files: tck-results.html
