name: SmallRye Build

on:
  push:
    branches: 
      - main
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - 'NOTICE'
      - 'README*'
  pull_request:
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - 'NOTICE'
      - 'README*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [17, 21]
    name: build with jdk ${{matrix.java}}

    steps:
      - uses: actions/checkout@v5
        name: checkout

      - uses: actions/setup-java@v5
        name: set up jdk ${{matrix.java}}
        with:
          distribution: 'temurin'
          java-version: ${{matrix.java}}
          cache: 'maven'
          cache-dependency-path: '**/pom.xml'

      - name: build with maven
        run: mvn -B formatter:validate verify --file pom.xml

      - uses: actions/upload-artifact@v5
        name: tck-report
        with:
          name: tck-report-java-${{matrix.java}}
          path: testsuite/tck/target/surefire-reports

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        java: [17, 21]
    name: build with jdk ${{matrix.java}} windows

    steps:
      - uses: actions/checkout@v5
        name: checkout

      - uses: actions/setup-java@v5
        name: set up jdk ${{matrix.java}}
        with:
          distribution: 'temurin'
          java-version: ${{matrix.java}}
          cache: 'maven'
          cache-dependency-path: '**/pom.xml'

      - name: build with maven
        run: mvn -B formatter:validate verify --file pom.xml

  docs:
    needs: [build]
    if: github.event_name == 'push' && github.repository_owner == 'smallrye'
    runs-on: ubuntu-latest
    name: docs

    steps:
      - uses: actions/checkout@v5
        name: checkout

      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'
          cache-dependency-path: '**/pom.xml'

      - uses: actions/setup-python@v6
        with:
          python-version: '3.9'

      - name: build docs
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          cd documentation
          mvn package
          pipx install pipenv
          pipenv install
          git fetch origin gh-pages --depth=1
          git config --global user.name "SmallRye CI"
          git config --global user.email "smallrye@googlegroups.com"
          pipenv run mike deploy --config-file=mkdocs.yaml --push --update-aliases Main SNAPSHOT

  quality:
    needs: [build]
    if: github.event_name == 'push' && github.repository_owner == 'smallrye'
    runs-on: ubuntu-latest
    name: quality

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'
          cache-dependency-path: '**/pom.xml'

      - name: build with docs and coverage
        run: | 
          mvn verify -Pcoverage javadoc:javadoc
          # tried to use sonar.coverage.exclusions in pom.xml and even in the admin of Sonar, but it seems the only way to make it work its here
          mvn sonar:sonar -Psonar -Dsonar.token=${{secrets.SONAR_TOKEN}} -Dsonar.coverage.exclusions=**/*/ConfigValueConfigSource$ConfigValueProperties*
